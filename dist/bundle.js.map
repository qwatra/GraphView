{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/base-model.ts","webpack:///./src/components/graph-model.ts","webpack:///./src/components/graph-view.tsx","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","export default class {\r\n  protected views: React.Component[];\r\n\r\n  constructor() { this.views = []; }\r\n\r\n  subscribe(view: React.Component) {\r\n      this.views.push(view);\r\n      view.forceUpdate();\r\n  }\r\n\r\n  unsubscribe(view: React.Component) {\r\n      this.views = this.views.filter((item: React.Component) => item !== view);\r\n  }\r\n\r\n  protected updateViews() {\r\n      this.views.forEach((view: React.Component) => view.forceUpdate())\r\n  }\r\n}","import BaseModel from \"./base-model\";\r\nimport { node } from \"prop-types\";\r\n\r\nexport interface Node {\r\n  label: string;\r\n  pos: Array<number>;\r\n  color: string; // к примеру #c0c0c0\r\n  selected: boolean;\r\n}\r\n\r\nexport interface Link {\r\n  from: number; // индекс первого узла\r\n  to: number; // индекс второго узла\r\n}\r\n  \r\nexport class GraphModel extends BaseModel {\r\n\r\n  protected links: Array<Link>;\r\n  protected nodes: Array<Node>;\r\n  protected nodeSize: {width:number, height:number} = {width: 40, height: 40};\r\n  protected cursorStartPos: Array<number>;\r\n  protected areaSize: Array<number>;\r\n  protected moveFlag:boolean = false;\r\n  protected selectArea = false;\r\n  protected copyPosForDaD: Array<Array<number>>;\r\n  protected canvasSize: {width:number, height:number} = {width: 512, height: 256};\r\n\r\n  //Метод по координатам мыши находит узел на который она наведена\r\n  //если узлов несколько, то возвращается последний, т.к. он будет отрисовыватся последним\r\n  protected getNodeIndexByCoord(x:number, y:number): number {\r\n    let node = -1;\r\n    for(let i = 0; i < this.nodes.length; i++) {\r\n      if(x >= this.nodes[i].pos[0] && x <= this.nodes[i].pos[0]+this.nodeSize.width && \r\n        y >= this.nodes[i].pos[1] && y<=this.nodes[i].pos[1]+this.nodeSize.height) {\r\n          node = i;\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n\r\n  //проверяет на сколько можно сдвинуть узлы, чтобы не было выхода за границы\r\n  protected testDelta(deltaX:number, deltaY:number) {\r\n    var newdx = deltaX, newdy = deltaY;\r\n    for(var i = 0; i<this.nodes.length; i++) {\r\n      if(this.nodes[i].selected) {\r\n        //правая граница\r\n        if(this.copyPosForDaD[i][0]+deltaX+this.nodeSize.width>this.canvasSize.width) {\r\n          newdx = this.canvasSize.width-(this.copyPosForDaD[i][0]+this.nodeSize.width);\r\n          deltaX = newdx;\r\n        }\r\n        //левая граница\r\n        if(this.copyPosForDaD[i][0]+deltaX<0) {\r\n          newdx = -this.copyPosForDaD[i][0];\r\n          deltaX = newdx;\r\n        }\r\n        //верхняя граица\r\n        if(this.copyPosForDaD[i][1]+deltaY<0) {\r\n          newdy = -this.copyPosForDaD[i][1];\r\n          deltaY = newdy;\r\n        }\r\n        //нижняя граница\r\n        if(this.copyPosForDaD[i][1]+deltaY+this.nodeSize.height>this.canvasSize.height) {\r\n          newdy = this.canvasSize.height-(this.copyPosForDaD[i][1]+this.nodeSize.width);\r\n          deltaY = newdy;\r\n        }\r\n      }\r\n    }\r\n    return {deltaX:newdx, deltaY:newdy}\r\n  }\r\n\r\n  moveMarkNode(newCursorPosX:number, newCursorPosY:number) {\r\n    let delta = this.testDelta(newCursorPosX-this.cursorStartPos[0], newCursorPosY-this.cursorStartPos[1])\r\n    for(var i = 0; i<this.nodes.length; i++) {\r\n      if(this.nodes[i].selected) {\r\n        this.nodes[i].pos = [this.copyPosForDaD[i][0]+delta.deltaX, \r\n          this.copyPosForDaD[i][1]+delta.deltaY];\r\n      }\r\n    }\r\n    /*for(var i = 0; i<this.nodes.length; i++) {\r\n      if(this.nodes[i].selected) {\r\n        this.nodes[i].pos = [this.copyPosForDaD[i][0]+newCursorPosX-this.cursorStartPos[0], \r\n          this.copyPosForDaD[i][1]+newCursorPosY-this.cursorStartPos[1]];\r\n      }\r\n    }*/\r\n    this.updateViews();\r\n  }\r\n\r\n  selectNodesByArea(endPosX:number, endPosY:number) {\r\n    //получаем координаты верхней левой точки\r\n    let cs = [\r\n      this.cursorStartPos[0]<endPosX? this.cursorStartPos[0]:endPosX,\r\n      this.cursorStartPos[1]<endPosY? this.cursorStartPos[1]:endPosY\r\n    ]\r\n    //получаем координаты нижней правой точки\r\n    let ce = [\r\n      this.cursorStartPos[0]>endPosX? this.cursorStartPos[0]:endPosX,\r\n      this.cursorStartPos[1]>endPosY? this.cursorStartPos[1]:endPosY\r\n    ];\r\n\r\n    let w = this.nodeSize.width;\r\n    let h = this.nodeSize.height;\r\n    for(let i=0; i<this.nodes.length; i++) {\r\n      let p = this.nodes[i].pos;\r\n      this.nodes[i].selected =\r\n        p[0]>cs[0]&&p[0]<ce[0] && p[1]>cs[1]&&p[1]<ce[1] ||\r\n        p[0]+w>cs[0]&&p[0]+w<ce[0] && p[1]>cs[1]&&p[1]<ce[1] ||\r\n        p[0]>cs[0]&&p[0]<ce[0] && p[1]+h>cs[1]&&p[1]+h<ce[1] ||\r\n        p[0]+w>cs[0]&&p[0]+w<ce[0] && p[1]+h>cs[1]&&p[1]+h<ce[1];\r\n    }\r\n    this.updateViews();\r\n  }\r\n\r\n  //возвращает координаты выделеной облости\r\n  //x,y,width,height\r\n  getSelectionArea():Array<number> {\r\n    if(this.areaSize) {\r\n      return this.cursorStartPos.concat(this.areaSize)\r\n    } \r\n    return null;\r\n  }\r\n\r\n  // должен вернуть массив всех связей узлов\r\n  getLinks(): Array<Link> {\r\n    return this.links;\r\n  };\r\n\r\n  // должен возвращать массив всех узлов\r\n  getNodes(): Array<Node> {\r\n    return this.nodes;\r\n  };\r\n\r\n  //Возвращает размер узлов\r\n  getNodeSize() {\r\n    return this.nodeSize;\r\n  }\r\n\r\n  //устанавливает размер узлов\r\n  setNodeSize(size:{width:number, height:number}) {\r\n    this.nodeSize = size;\r\n    this.updateViews();\r\n  }\r\n\r\n  // при вызове контрол GraphView должен начать отображать переданные узлы и связи\r\n  setNodesAndLinks(nodes: Array<Node>, links: Array<Link>) {\r\n    this.nodes = nodes;\r\n    this.links = links;\r\n    this.updateViews();\r\n  };\r\n\r\n  onMouseDown(x:number, y:number, ctrlFlag:boolean) {\r\n    this.cursorStartPos = [x, y];\r\n    let indexNode = this.getNodeIndexByCoord(x, y);\r\n    if(~indexNode) { // клик по узлу\r\n      if(!this.nodes[indexNode].selected) {//узел не выделен\r\n        if(ctrlFlag) { //выделяем узел\r\n          this.nodes[indexNode].selected = true;\r\n        } else { // выделяем узел и снимаем выделение с других узлов\r\n          for(let i=0; i<this.nodes.length; i++) {\r\n            this.nodes[i].selected = indexNode==i;\r\n          }\r\n        }\r\n      } else if(ctrlFlag) {\r\n        this.nodes[indexNode].selected = false;\r\n      }\r\n    } else { //клик по пустой области\r\n      this.selectArea = true;\r\n      for(let i=0; i<this.nodes.length; i++) {\r\n        this.nodes[i].selected = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseUp(x:number, y:number, ctrlFlag:boolean) {\r\n    let indexNode = this.getNodeIndexByCoord(x, y);\r\n    //если выделено несколько элеметов и произошел клик на один из выделеных\r\n    //то снимаем выделение с других\r\n    if(~indexNode && !this.moveFlag && this.nodes[indexNode].selected && !ctrlFlag) { // MousePress\r\n      for(let i=0; i<this.nodes.length; i++) {\r\n        this.nodes[i].selected = indexNode==i;\r\n      }\r\n    }\r\n    this.cursorStartPos = null;\r\n    this.moveFlag = false;\r\n    this.selectArea = false;\r\n    this.areaSize = null;\r\n    this.copyPosForDaD = null;\r\n    this.updateViews();\r\n  }\r\n  \r\n  onMouseMove(x:number, y:number) {\r\n    if(!this.moveFlag) {\r\n      this.copyPosForDaD = this.nodes.map(function(n) {\r\n        return n.pos.slice();\r\n      })\r\n    }\r\n    this.moveFlag = true;\r\n    if(this.selectArea) {\r\n      this.areaSize = [x-this.cursorStartPos[0], y-this.cursorStartPos[1]];\r\n      this.selectNodesByArea(x,y);\r\n    } else {\r\n      this.moveMarkNode(x, y);\r\n    }\r\n  }\r\n}","import * as React from \"react\";\r\nimport { GraphModel, Node, Link } from './graph-model'\r\n\r\ninterface Props {\r\n  model: GraphModel;\r\n  size: {width:number, height:number};\r\n}\r\n\r\nconst charWidth = 10;\r\n\r\nexport class GraphView extends React.Component<Props, {}> {\r\n  componentWillMount() { this.props.model.subscribe(this); }\r\n  componentWillUnmount() { this.props.model.unsubscribe(this); }\r\n  componentDidMount() { this.drawGraph(); }\r\n  componentDidUpdate() { this.drawGraph(); }\r\n\r\n  //Отрисовка графа\r\n  drawGraph() {\r\n    let nodes:Array<Node> = this.props.model.getNodes();\r\n    let links:Array<Link> = this.props.model.getLinks();\r\n    let nodeSize = this.props.model.getNodeSize();\r\n\r\n    const ctx = (this.refs.canvas as any).getContext('2d');\r\n    ctx.font = \"italic 14pt Arial\"\r\n    //очищаем холст\r\n    ctx.clearRect(0, 0, this.props.size.width, this.props.size.height);\r\n    \r\n    //рисуем дуги\r\n    for(let i = 0; links && i < links.length; i++) {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"black\";\r\n      ctx.moveTo(nodes[links[i].from].pos[0]+nodeSize.width/2, nodes[links[i].from].pos[1]+nodeSize.height/2);\r\n      ctx.lineTo(nodes[links[i].to].pos[0]+nodeSize.width/2, nodes[links[i].to].pos[1]+nodeSize.height/2);\r\n      ctx.stroke();\r\n    }\r\n    \r\n    //рисуем узлы\r\n    ctx.lineWidth = \"2\"\r\n    for(let i = 0; nodes && i < nodes.length; i++) {\r\n      if(nodes[i].selected) {\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.rect(nodes[i].pos[0], nodes[i].pos[1], nodeSize.width, nodeSize.height);\r\n        ctx.stroke(); //рисует прямоугольник\r\n        ctx.fillStyle = nodes[i].color;\r\n        ctx.fill(); //заливает прямоугоьник\r\n      } else {\r\n        ctx.fillStyle = nodes[i].color;\r\n        ctx.fillRect(nodes[i].pos[0], nodes[i].pos[1], nodeSize.width, nodeSize.height);\r\n      }\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillText(nodes[i].label, \r\n        nodes[i].pos[0]+nodeSize.width/2-charWidth*nodes[i].label.length/2, \r\n        nodes[i].pos[1]+nodeSize.height/2+charWidth/2);\r\n    }\r\n\r\n    //рисуем область выделения если она есть \r\n    let sa = this.props.model.getSelectionArea();\r\n    if(sa) {\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"blue\";\r\n      ctx.rect(...sa);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  onMouseDownCanvas(event: React.MouseEvent<HTMLElement>) {\r\n    this.props.model.onMouseDown(event.nativeEvent.offsetX, event.nativeEvent.offsetY, event.ctrlKey);\r\n    (this.refs.canvas as HTMLElement).onmousemove = \r\n        function(e:MouseEvent) {\r\n          this.props.model.onMouseMove(e.offsetX, e.offsetY);\r\n        }.bind(this);\r\n  }\r\n\r\n  onMouseUpCanvas(event: React.MouseEvent<HTMLElement>) {\r\n    this.props.model.onMouseUp(event.nativeEvent.offsetX, event.nativeEvent.offsetY, event.ctrlKey);\r\n    (event.nativeEvent.target as HTMLElement).onmousemove = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas ref=\"canvas\" width={this.props.size.width} height={this.props.size.height} onMouseDown={this.onMouseDownCanvas.bind(this)} \r\n        onMouseUp={this.onMouseUpCanvas.bind(this)}\r\n        style={{border: \"1px solid black\"}}/>\r\n    );\r\n  }\r\n}","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { GraphModel, Link, Node } from \"./components/graph-model\";\r\nimport { GraphView } from \"./components/graph-view\";\r\nconst maxNodeSize = { width: 80, height: 50 };\r\n\r\nconst nodePalette = [\r\n  '#3e442b',\r\n  '#2d7dd2',\r\n  '#97cc04',\r\n  '#eeb902',\r\n  '#f45d01',\r\n  '#f28456',\r\n  '#a55570',\r\n  '#a98080',\r\n  '#f2e9df',\r\n  '#24040f'\r\n];\r\n\r\nconst model = new GraphModel();\r\n\r\nfunction generate() {\r\n  const nodesNum = Math.round(10 + Math.random() * 30);\r\n  const linksNum = Math.round(5 + Math.random() * 20);\r\n  \r\n  const nodes: Array<Node> = Array(nodesNum).fill(0).map((v, i) => {\r\n    return {\r\n      label: 'n' + i,\r\n      pos: [\r\n        Math.round(Math.random() * (512 - maxNodeSize.width)),\r\n        Math.round(Math.random() * (256 - maxNodeSize.height))\r\n      ],\r\n      color: nodePalette[i % nodePalette.length],\r\n      selected: false\r\n    };\r\n  });\r\n  \r\n  const links: Array<Link> = Array(linksNum).fill(0).map((v, i) => {\r\n    return {\r\n      from: Math.round( Math.random() * (nodesNum - 1) ),\r\n      to: Math.round( Math.random() * (nodesNum - 1) )\r\n    };\r\n  });\r\n  \r\n  model.setNodesAndLinks(nodes, links);\r\n}\r\n\r\nconst models = [ model, model ];\r\n// 1. нужно добавить возможность выделять несколько узлов\r\n//    ctrl + click по невыделенному узлу выделяет его\r\n//    ctrl + click по выделенному узлу снимает выделение\r\n//    click по невыделеному узлу делает выделенным только его, с остальных узлов выделение снимается\r\n//    выделение нескольких узлов через прямоугольное выделение (click по пустой области, перетащили курсор, всё что попало в прямоугольник - выделяем)\r\n// 2. вся логика должна находиься в GraphModel (выделение, поиск узла, смена координат узла, ...)\r\n// 3. выделенные узлы должны как-то графически отличаться от невыделенных\r\n// 4. избавиться от всех any, заменить их на соответствующие типы\r\n// 5. при перетаскивании когда курсор уходит за пределы области канвы узлы должны липнуть к границам канвы\r\n// 6. код этого файла должен работать следующим образом:\r\n//   на странице должно отображаться ровно столько GraphView сколько моделей задано в массиве models\r\n//   если одной модели соответсвтует несколько GraphView, то все изменения должны отражаться на всех связанных\r\n//   при нажатии на кнопку generate все связанные с model GraphView должны обновиться и показать сгенерированные данные\r\n// 7. задание так же должно работать если открыть index.html локально\r\nReactDOM.render(\r\n    <div>\r\n      <div>\r\n        <button onClick={generate}>\r\n          generate\r\n        </button>\r\n      </div>\r\n        {models.map((model, i) => {\r\n          return (\r\n            <GraphView key={i} size={{width: 512, height: 256}} model={model}/>\r\n          );\r\n        })}\r\n    </div >,\r\n    document.getElementById(\"root\")\r\n);","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}